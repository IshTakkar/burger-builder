{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","components/Order/CheckoutSummary/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/orders.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Auth/Auth.js","components/Order/CheckoutSummary/Order.js","components/Orders/Orders.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","backdrop","show","Backdrop","onClick","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","isAuth","toolbar","Toolbar","DrawerToggle","DesktopOnly","Layout","state","showSideDrawer","sideDrawerHandler","setState","prevState","this","Content","Component","connect","auth","token","burgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","BurgerIngredients","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","More","added","Less","deleted","disabled","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientDeleted","OrderButton","purchaseable","ordered","Modal","nextProps","nextState","modalCancel","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","cancel","continue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorHandledHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authSuccess","userId","idToken","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirect","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","updatePurchaseState","sum","onInitIngredients","orderSummary","disabledInfo","ings","err","Spinner","totPrice","onIngredientRemoved","onIngredientAdded","burgerBuilder","totalPrice","name","ingredientName","actions","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","purchaseCancel","purchaseContinue","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","formFillerHelper","street","pinCode","country","email","delivery","valid","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","formIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","validation","id","elType","placeholder","required","minLength","rules","isValid","trim","orderFormArray","config","form","onSubmit","formElement","isLoading","orders","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","orderActions","Checkout","goBack","replace","summary","purchasedRedirect","purchased","match","url","component","Auth","isEmail","password","isSignUp","authModeChangeHandler","previousState","submitHandler","onAuth","buildingBurger","authRedirectPath","onSetAuthRedirectPath","maxLength","test","isNumeric","controlName","updatedControl","inputFormArray","errorMessage","authRedirect","building","isSignIn","authData","returnSecureToken","Date","getTime","expiresIn","setItem","localId","console","log","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","ord","queryParams","fetchedOrders","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","userID","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","newOrder","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.24fd2fd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__2iTof\",\"BreadTop\":\"BurgerIngredients_BreadTop__2nwzn\",\"Seeds1\":\"BurgerIngredients_Seeds1__2Fbvc\",\"Seeds2\":\"BurgerIngredients_Seeds2__29UkM\",\"Meat\":\"BurgerIngredients_Meat__xjT9N\",\"Cheese\":\"BurgerIngredients_Cheese__o806t\",\"Salad\":\"BurgerIngredients_Salad__3u-vf\",\"Bacon\":\"BurgerIngredients_Bacon__2W7Jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2tPJP\",\"Open\":\"SideDrawer_Open__15oj0\",\"Close\":\"SideDrawer_Close__1o8cG\",\"Logo\":\"SideDrawer_Logo__1oP4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2L_-K\",\"Logo\":\"Toolbar_Logo__1wv6S\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3M4h8\",\"DrawerToggle\":\"Toolbar_DrawerToggle__2qbrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__5JNkW\",\"Label\":\"BuildControl_Label__1aFR3\",\"Less\":\"BuildControl_Less__29tBl\",\"More\":\"BuildControl_More__1xU6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1OaMF\",\"Label\":\"Input_Label__3P41r\",\"InputElement\":\"Input_InputElement__2iHEA\",\"Invalid\":\"Input_Invalid__39gaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__d4vN1\",\"active\":\"NavigationItem_active__jkFfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3-7FQ\",\"OrderButton\":\"BuildControls_OrderButton__3nP6D\",\"enable\":\"BuildControls_enable__M0lFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1UCRd\",\"Success\":\"Button_Success__1E1dM\",\"Danger\":\"Button_Danger__3-C9O\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__kICZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3f5im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__28PfP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3k1BO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__DcHft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__l0AHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1ah2z\",\"load1\":\"Spinner_load1__qWP03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3jEqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1TSrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1ZZo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__38l5t\"};","const aux = props => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt=\"MyBurger\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink\r\n                to={props.link} exact={props.exact}\r\n                activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n            {props.isAuthenticated ? <NavigationItem link=\"/orders\" >Orders</NavigationItem> : null}\r\n            {!props.isAuthenticated\r\n                ? <NavigationItem link=\"/auth\" >Authenticate</NavigationItem>\r\n                : <NavigationItem link=\"/logout\" >Logout</NavigationItem>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\r\n};\r\n\r\nexport default backdrop;    ","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>    \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './Toolbar.module.css';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <div\r\n                onClick={props.clicked}\r\n                className={classes.DrawerToggle}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </div>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.css';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: (prevState.showSideDrawer ? false : true) };\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    clicked={this.sideDrawerHandler}\r\n                />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    closed={this.sideDrawerHandler}\r\n                    open={this.state.showSideDrawer}\r\n                />\r\n                <main className={classes.Content}>{this.props.children}</main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst burgerIngredients = (props) => {\r\n    let ingredient = null;\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        \r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        \r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        \r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        \r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        \r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        \r\n        default:\r\n            ingredient = null;\r\n    };\r\n    return ingredient;\r\n};\r\n\r\nburgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default burgerIngredients;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredients type={igKey} key={igKey + i} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    if (transformedIngredients.length === 0)\r\n        transformedIngredients = <p>Please add ingredients!</p>\r\n    return (\r\n        <div className={classes.Burger}>\r\n                <BurgerIngredients type=\"bread-top\"/>\r\n                {transformedIngredients}\r\n                <BurgerIngredients type=\"bread-bottom\"/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.More} onClick={props.added} >+</button>\r\n            <button className={classes.Less} onClick={props.deleted} disabled={props.disabled}>-</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst buildControls = (props) => {\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Esimated Price of BURGER: $<strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    label={ctrl.label}\r\n                    added={() => { props.ingredientAdded(ctrl.type) }}\r\n                    deleted={() => { props.ingredientDeleted(ctrl.type) }}\r\n                    key={ctrl.label}\r\n                    disabled={props.disabled[ctrl.type]}\r\n                />\r\n            ))}\r\n            <button\r\n                className={classes.OrderButton}\r\n                disabled={!props.purchaseable}\r\n                onClick={props.ordered}>\r\n                {props.isAuth ? 'ORDER NOW' : 'SIGN-UP TO ORDER'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalCancel}/>\r\n                <div className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button\r\n            disabled={props.disabled}\r\n            onClick={props.clicked}\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => { \r\n            if (this.props.ingredients[igKey]) {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}: {this.props.ingredients[igKey]}</span>\r\n                    </li>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        });\r\n        \r\n        return(\r\n            <Aux>\r\n                <h3>Your Order!</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.cancel}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continue}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n        \r\n\r\n}\r\n\r\n\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-e5fe1.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className={classes.Loader}>Loading...</div>\r\n    );\r\n};\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, (error) => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorHandledHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalCancel={this.errorHandledHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userID');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignIn) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw';\r\n        if (!isSignIn)\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw'\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 10000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationTime', expirationTime);\r\n                localStorage.setItem('userID', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(authLogout());\r\n        } else {\r\n            const expirationTime = new Date(localStorage.getItem('expirationTime'));\r\n            if (expirationTime <= new Date()) {\r\n                dispatch(authLogout());\r\n            } else {\r\n                const userID = localStorage.getItem('userID');\r\n                dispatch(authSuccess(token, userID));\r\n                dispatch(checkAuthTimeout((expirationTime.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.props.onInitIngredients();\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true });\r\n        } else {\r\n            this.props.onSetAuthRedirect('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    };\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n        });\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        \r\n        return sum > 0;\r\n    };\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const newCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = newCount;\r\n\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const newPrice = priceAddition + oldPrice;\r\n\r\n    //     this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // };\r\n\r\n    // deleteIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if (oldCount <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     const newCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = newCount;\r\n\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const priceSub = INGREDIENT_PRICES[type];\r\n    //     const newPrice = oldPrice - priceSub;\r\n\r\n    //     this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // };\r\n\r\n \r\n    render() {\r\n\r\n        let orderSummary = null;\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let burger = this.props.err ? <p>Couldn't load ingredients! Please refresh.</p> : <Spinner />;\r\n        if(this.props.ings) \r\n        {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger\r\n                        ingredients={this.props.ings}\r\n                    />\r\n                    <BuildControls\r\n                        price={this.props.totPrice}\r\n                        ingredientDeleted={this.props.onIngredientRemoved}\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        disabled={disabledInfo}\r\n                        isAuth={this.props.isAuthenticated}\r\n                    />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                    continue={this.purchaseContinueHandler}\r\n                    price={this.props.totPrice}\r\n                    cancel={this.purchaseCancelHandler}\r\n                    ingredients={this.props.ings}\r\n                />\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalCancel={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totPrice: state.burgerBuilder.totalPrice,\r\n        err: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (name) => dispatch(actions.addIngredient(name)),\r\n        onIngredientRemoved: (name) => dispatch(actions.removeIngredient(name)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirect: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                let fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            })\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>\r\n                We hope it tastes good!\r\n            </h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} \r\n                    onChange={props.changed} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as orderActions from '../../../store/actions/index';\r\n\r\n\r\nclass ContactData extends Component {\r\n\r\n    formFillerHelper(elType, type, placeholder, value) {\r\n        return {\r\n            elementType: `${elType}`,\r\n            elementConfig: {\r\n                type: `${type}`,\r\n                placeholder: `${placeholder}`\r\n            },\r\n            value: `${value}`,\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            minLength: 1\r\n        }\r\n    }\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: this.formFillerHelper('input', 'text', 'Your Name', ''),\r\n            street: this.formFillerHelper('input', 'text', 'Street', ''),\r\n            pinCode: this.formFillerHelper('input', 'text', 'PIN Code', ''),\r\n            country: this.formFillerHelper('input', 'text', 'Country', ''),\r\n            email: this.formFillerHelper('input', 'email', 'Your Email', ''),\r\n            delivery: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                valid: true,\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        if (!rules)\r\n            return true;\r\n\r\n        let isValid = false;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        // this.setState({ isLoading: true });\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        //alert('You continue!');\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            totalPrice: this.props.totPrice,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n    inputChangedHandler = (event, formIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[formIdentifier]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[formIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let id in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[id].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    }\r\n\r\n    render() {\r\n\r\n        let orderFormArray = [];\r\n\r\n        for (let key in this.state.orderForm) {\r\n            orderFormArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {orderFormArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        value={formElement.config.value}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.isLoading)\r\n            form = <Spinner />\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totPrice: state.burgerBuilder.totalPrice,\r\n        isLoading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(orderActions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.history.replace('/checkout/data-form');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />;\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            \r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        purchaseContinue={this.purchaseContinueHandler}\r\n                        purchaseCancel={this.purchaseCancelHandler}\r\n                    />\r\n                    <Route path={this.props.match.url + '/data-form'} component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.orders.purchased\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps )(Checkout);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/')\r\n            this.props.onSetAuthRedirectPath();\r\n    }\r\n\r\n    formFillerHelper(elType, type, placeholder, value) {\r\n        return {\r\n            elementType: `${elType}`,\r\n            elementConfig: {\r\n                type: `${type}`,\r\n                placeholder: `${placeholder}`\r\n            },\r\n            value: `${value}`,\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            minLength: 1\r\n        }\r\n    }\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                minLength: 1\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            }\r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    authModeChangeHandler = () => {\r\n        this.setState(previousState => {\r\n            return { isSignUp: !previousState.isSignUp };\r\n        })\r\n    }\r\n\r\n    inputChangedHandler(event, controlName) {\r\n        const updatedControl = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        this.setState({ controls: updatedControl });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    render() {\r\n        let inputFormArray = [];\r\n        for (let key in this.state.controls) {\r\n            inputFormArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        };\r\n\r\n        let form = inputFormArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                value={formElement.config.value}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n        \r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = <p>{this.props.error.message}</p>\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated)\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {errorMessage}\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={this.authModeChangeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignUp ? 'SIGN-IN' : 'SIGN-UP'}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientsName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientsName,\r\n            amount: props.ingredients[ingredientsName]\r\n        })\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map(ig => {\r\n        return <span\r\n            key={ig.name}\r\n            style={\r\n                {\r\n                    textTransform: 'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'\r\n                }\r\n            }  \r\n        >\r\n            {ig.name}: ({ig.amount})\r\n        </span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../Order/CheckoutSummary/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let ord = <Spinner />;\r\n        if (!this.props.loading) {\r\n            ord = \r\n                this.props.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.totalPrice}\r\n                    />\r\n                ))\r\n        }\r\n        return (\r\n            <div>\r\n                {ord}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.authLogout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport Auth from './containers/Auth/Auth';\n\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Orders from './components/Orders/Orders';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSt);\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false });\r\n        \r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject(state, { loading: true });\r\n        \r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            });\r\n        \r\n        case actionTypes.FETCH_ORDERS_FAILED:\r\n            return updateObject(state, { loading: false });\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    error: null,\r\n    loading: false,\r\n    userId: null,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return updateObject(state, { loading: true, error: null });\r\n        \r\n        case actionTypes.AUTH_SUCCESS:\r\n            return updateObject(state, {\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                loading: false,\r\n                error: null\r\n            });\r\n        \r\n        case actionTypes.AUTH_FAIL:\r\n            return updateObject(state, { loading: false, error: action.error });\r\n        \r\n        case actionTypes.AUTH_LOGOUT:\r\n            return updateObject(state, { token: null, userId: null });\r\n        \r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return updateObject(state, { authRedirectPath: action.path });\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/orders';\nimport authReducer from './store/reducers/auth';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  orders: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter><App /></BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}