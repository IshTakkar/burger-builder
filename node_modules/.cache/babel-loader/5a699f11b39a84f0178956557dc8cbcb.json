{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nconst setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios.get('/ingredients.json').then(response => {\n      dispatch(setIngredients(response.data));\n    }).catch(error => {});\n  };\n};","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/store/actions/burgerBuilder.js"],"names":["actionTypes","axios","addIngredient","name","type","ADD_INGREDIENT","ingredientName","removeIngredient","REMOVE_INGREDIENT","setIngredients","ingredients","SET_INGREDIENTS","initIngredients","dispatch","get","then","response","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,cADf;AAEHC,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;AAMP,OAAO,MAAMI,gBAAgB,GAAIJ,IAAD,IAAU;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,iBADf;AAEHF,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;;AAOP,MAAMM,cAAc,GAAIC,WAAD,IAAiB;AACpC,SAAO;AACHN,IAAAA,IAAI,EAAEJ,WAAW,CAACW,eADf;AAEHD,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH,CALD;;AAOA,OAAO,MAAME,eAAe,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AACfZ,IAAAA,KAAK,CAACa,GAAN,CAAU,mBAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACJ,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI,CAEf,CANL;AAOH,GARD;AASH,CAVM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n            })\r\n            .catch(error => {\r\n                \r\n            });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}