{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = updateObject(action.orderData, {\n        id: action.orderID\n      });\n      return updateObject(state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_FAILED:\n      return updateObject(state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/store/reducers/orders.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderID","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,aAAjB;AACI,aAAOT,YAAY,CAACM,KAAD,EAAQ;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAR,CAAnB;;AAEJ,SAAKL,WAAW,CAACW,qBAAjB;AACI,aAAOV,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AAEJ,SAAKJ,WAAW,CAACY,uBAAjB;AACI,YAAMC,QAAQ,GAAGZ,YAAY,CAACO,MAAM,CAACM,SAAR,EAAmB;AAAEC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAAb,OAAnB,CAA7B;AACA,aAAOf,YAAY,CAACM,KAAD,EAAQ;AACvBH,QAAAA,OAAO,EAAE,KADc;AAEvBC,QAAAA,SAAS,EAAE,IAFY;AAGvBF,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAHe,OAAR,CAAnB;;AAMJ,SAAKb,WAAW,CAACkB,oBAAjB;AACI,aAAOjB,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AAEJ,SAAKJ,WAAW,CAACmB,kBAAjB;AACI,aAAOlB,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AAEJ,SAAKJ,WAAW,CAACoB,oBAAjB;AACI,aAAOnB,YAAY,CAACM,KAAD,EAAQ;AACvBJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MADQ;AAEvBC,QAAAA,OAAO,EAAE;AAFc,OAAR,CAAnB;;AAKJ,SAAKJ,WAAW,CAACqB,mBAAjB;AACI,aAAOpB,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AACJ;AACI,aAAOG,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.orderID });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        \r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false });\r\n        \r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject(state, { loading: true });\r\n        \r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            });\r\n        \r\n        case actionTypes.FETCH_ORDERS_FAILED:\r\n            return updateObject(state, { loading: false });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}