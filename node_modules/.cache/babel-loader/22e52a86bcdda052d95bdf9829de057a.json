{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-builder-copy\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: this.formFillerHelper('input', 'email', 'Email Address', ''),\n        password: this.formFillerHelper('input', 'password', 'Password', '')\n      }\n    };\n  }\n\n  formFillerHelper(elType, type, placeholder, value) {\n    return {\n      elementType: `${elType}`,\n      elementConfig: {\n        type: `${type}`,\n        placeholder: `${placeholder}`\n      },\n      value: `${value}`,\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false,\n      minLength: 1\n    };\n  }\n\n  render() {\n    let inputFormArray = [];\n\n    for (key in this.state.controls) {\n      inputFormArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    ;\n    const form = inputFormArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      value: formElement.config.value,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"SUBMIT\"));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/containers/Auth/Auth.js"],"names":["React","Component","Button","Input","Auth","state","controls","email","formFillerHelper","password","elType","type","placeholder","value","elementType","elementConfig","validation","required","valid","touched","minLength","render","inputFormArray","key","push","id","config","form","map","formElement","event","inputChangedHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAmBzBI,KAnByB,GAmBjB;AACJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B,OAA/B,EAAwC,eAAxC,EAAyD,EAAzD,CADD;AAENC,QAAAA,QAAQ,EAAE,KAAKD,gBAAL,CAAsB,OAAtB,EAA+B,UAA/B,EAA2C,UAA3C,EAAuD,EAAvD;AAFJ;AADN,KAnBiB;AAAA;;AAEzBA,EAAAA,gBAAgB,CAACE,MAAD,EAASC,IAAT,EAAeC,WAAf,EAA4BC,KAA5B,EAAmC;AAC/C,WAAO;AACHC,MAAAA,WAAW,EAAG,GAAEJ,MAAO,EADpB;AAEHK,MAAAA,aAAa,EAAE;AACXJ,QAAAA,IAAI,EAAG,GAAEA,IAAK,EADH;AAEXC,QAAAA,WAAW,EAAG,GAAEA,WAAY;AAFjB,OAFZ;AAMHC,MAAAA,KAAK,EAAG,GAAEA,KAAM,EANb;AAOHG,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF,OAPT;AAUHC,MAAAA,KAAK,EAAE,KAVJ;AAWHC,MAAAA,OAAO,EAAE,KAXN;AAYHC,MAAAA,SAAS,EAAE;AAZR,KAAP;AAcH;;AASDC,EAAAA,MAAM,GAAG;AACL,QAAIC,cAAc,GAAG,EAArB;;AACA,SAAKC,GAAL,IAAY,KAAKlB,KAAL,CAAWC,QAAvB,EAAiC;AAC7BgB,MAAAA,cAAc,CAACE,IAAf,CAAoB;AAChBC,QAAAA,EAAE,EAAEF,GADY;AAEhBG,QAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWC,QAAX,CAAoBiB,GAApB;AAFQ,OAApB;AAIH;;AAAA;AAED,UAAMI,IAAI,GAAGL,cAAc,CAACM,GAAf,CAAmBC,WAAW,iBACvC,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,WAAW,CAACJ,EADrB;AAEI,MAAA,WAAW,EAAEI,WAAW,CAACH,MAAZ,CAAmBZ,WAFpC;AAGI,MAAA,aAAa,EAAEe,WAAW,CAACH,MAAZ,CAAmBX,aAHtC;AAII,MAAA,OAAO,EAAE,CAACc,WAAW,CAACH,MAAZ,CAAmBR,KAJjC;AAKI,MAAA,cAAc,EAAEW,WAAW,CAACH,MAAZ,CAAmBV,UALvC;AAMI,MAAA,KAAK,EAAEa,WAAW,CAACH,MAAZ,CAAmBb,KAN9B;AAOI,MAAA,OAAO,EAAEgB,WAAW,CAACH,MAAZ,CAAmBP,OAPhC;AAQI,MAAA,OAAO,EAAGW,KAAD,IAAW,KAAKC,mBAAL,CAAyBD,KAAzB,EAAgCD,WAAW,CAACJ,EAA5C,CARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAb;AAaA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH;;AArDwB;;AAwD7B,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\n\r\nclass Auth extends Component {\r\n\r\n    formFillerHelper(elType, type, placeholder, value) {\r\n        return {\r\n            elementType: `${elType}`,\r\n            elementConfig: {\r\n                type: `${type}`,\r\n                placeholder: `${placeholder}`\r\n            },\r\n            value: `${value}`,\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            minLength: 1\r\n        }\r\n    }\r\n\r\n    state = {\r\n        controls: {\r\n            email: this.formFillerHelper('input', 'email', 'Email Address', ''),\r\n            password: this.formFillerHelper('input', 'password', 'Password', ''),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let inputFormArray = [];\r\n        for (key in this.state.controls) {\r\n            inputFormArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        };\r\n\r\n        const form = inputFormArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                value={formElement.config.value}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <div>\r\n                <Button btnType=\"Success\">SUBMIT</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}