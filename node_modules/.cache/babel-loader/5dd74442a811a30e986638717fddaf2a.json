{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-builder-copy\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Auth from './containers/Auth/Auth';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Orders from './components/Orders/Orders';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    // let routes = (\n    //   <Switch>\n    //     <Route path=\"/auth\" component={Auth} />\n    //     <Route path=\"/\" component={BurgerBuilder} />\n    //     <Redirect to=\"/\"/>\n    //   </Switch>\n    // );\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/checkout\",\n        component: Checkout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/orders\",\n        component: Orders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/auth\",\n        component: Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        component: BurgerBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/App.js"],"names":["React","Component","Layout","BurgerBuilder","Checkout","Auth","Redirect","Route","Switch","withRouter","connect","Orders","Logout","actions","App","componentDidMount","props","onTryAutoSignup","render","isAuthenticated","routes","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAE1Bc,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAI,KAAKF,KAAL,CAAWG,eAAf,EAAgC;AAC9BC,MAAAA,MAAM,gBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEhB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEO,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEP,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEF,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,MADH,CADF,CADF;AAQD;;AApCyB;;AAuC5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,eAAe,EAAE,MAAMS,QAAQ,CAACb,OAAO,CAACc,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAelB,UAAU,CAACC,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport Auth from './containers/Auth/Auth';\n\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Orders from './components/Orders/Orders';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n\n    // let routes = (\n    //   <Switch>\n    //     <Route path=\"/auth\" component={Auth} />\n    //     <Route path=\"/\" component={BurgerBuilder} />\n    //     <Redirect to=\"/\"/>\n    //   </Switch>\n    // );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}