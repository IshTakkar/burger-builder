{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {}, timeout);\n  };\n};\nexport const authSuccess = (token, userID) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userID: userID\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (email, password, isSignIn) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw';\n    if (!isSignIn) url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw';\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localID));\n      dispatch(checkAuthTimeout(reponse.data.expiresIn));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","checkAuthTimeout","expirationTime","dispatch","setTimeout","timeout","authSuccess","token","userID","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","auth","email","password","isSignIn","authData","returnSecureToken","url","post","then","response","console","log","data","localID","reponse","expiresIn","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAChD,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM,CAEhB,CAFS,EAEPC,OAFO,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHT,IAAAA,IAAI,EAAEH,WAAW,CAACa,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,IAAI,EAAEH,WAAW,CAACiB,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC/C,SAAOd,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACA,UAAMoB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GAAG,uGAAV;AACA,QAAI,CAACH,QAAL,EACIG,GAAG,GAAG,mHAAN;AACJvB,IAAAA,KAAK,CAACwB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACKI,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACApB,MAAAA,QAAQ,CAACG,WAAW,CAACiB,QAAQ,CAACG,IAAT,CAAchB,OAAf,EAAwBa,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACAxB,MAAAA,QAAQ,CAACF,gBAAgB,CAAC2B,OAAO,CAACF,IAAR,CAAaG,SAAd,CAAjB,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA5B,MAAAA,QAAQ,CAACQ,QAAQ,CAACoB,GAAG,CAACR,QAAJ,CAAaG,IAAb,CAAkBd,KAAnB,CAAT,CAAR;AACH,KATL;AAUH,GApBD;AAqBH,CAtBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            \r\n        }, timeout);\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userID) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userID: userID\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignIn) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw';\r\n        if (!isSignIn)\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBD_9XlSoQJMc3DKitAKDGG508_XhKm9Lw'\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localID));\r\n                dispatch(checkAuthTimeout(reponse.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}