{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: action.ingredients,\n    totalPrice: 4,\n    error: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return;\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedSt","setIngredients","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMC,iBAAiB,GAAG;AAAE,KAACD,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AAAtE,GAA1B;AACA,QAAMC,kBAAkB,GAAGf,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBW,iBAApB,CAAvC;AACA,QAAMG,YAAY,GAAG;AACjBd,IAAAA,WAAW,EAAEa,kBADI;AAEjBZ,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAF/B,GAArB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQK,YAAR,CAAnB;AACH,CARD;;AAUA,MAAMC,gBAAgB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAMM,UAAU,GAAG;AAAE,KAACN,MAAM,CAACE,cAAR,GAAyBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C;AAAtE,GAAnB;AACA,QAAMK,WAAW,GAAGnB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBgB,UAApB,CAAhC;AACA,QAAME,SAAS,GAAG;AACdlB,IAAAA,WAAW,EAAEiB,WADC;AAEdhB,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAFlC,GAAlB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQS,SAAR,CAAnB;AACH,CARD;;AAUA,MAAMC,cAAc,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBT,IAAAA,WAAW,EAAEU,MAAM,CAACV,WADG;AAEvBC,IAAAA,UAAU,EAAE,CAFW;AAGvBC,IAAAA,KAAK,EAAE;AAHgB,GAAR,CAAnB;AAKH,CAND;;AAQA,MAAMkB,OAAO,GAAG,CAACX,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACW,IAAf;AACI,SAAKxB,WAAW,CAACyB,cAAjB;AAAiC,aAAOd,aAAa,CAACC,KAAD,EAAQC,MAAR,CAApB;;AACjC,SAAKb,WAAW,CAAC0B,iBAAjB;AAAoC,aAAOR,gBAAgB,CAACN,KAAD,EAAQC,MAAR,CAAvB;;AACpC,SAAKb,WAAW,CAAC2B,eAAjB;AAAkC;;AAGlC,SAAK3B,WAAW,CAAC4B,wBAAjB;AACI,aAAO3B,YAAY,CAACW,KAAD,EAAQ;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAAR,CAAnB;;AACJ;AACI,aAAOO,KAAP;AATR;AAWH,CAZD;;AAcA,eAAeW,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedSt);\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return \r\n            \r\n        \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return updateObject(state, { error: true });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}