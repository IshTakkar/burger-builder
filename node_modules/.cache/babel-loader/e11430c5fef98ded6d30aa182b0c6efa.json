{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const initIngredients = () => {\n  return dispatch => {\n    axios.get('/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/React/burger-builder-copy/src/store/actions/burgerBuilder.js"],"names":["actionTypes","addIngredient","name","type","ADD_INGREDIENT","ingredientName","removeIngredient","REMOVE_INGREDIENT","initIngredients","dispatch","axios","get","then","response","setState","ingredients","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,cADf;AAEHC,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;AAMP,OAAO,MAAMI,gBAAgB,GAAIJ,IAAD,IAAU;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACO,iBADf;AAEHF,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,eAAe,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AACfC,IAAAA,KAAK,CAACC,GAAN,CAAU,mBAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,QAAQ,CAACG;AAAxB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZ,WAAKJ,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KANL;AAOH,GARD;AASH,CAVM","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ ingredients: response.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}